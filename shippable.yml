resources:
  - name: ric03uec_app
    type: GitRepo
    configuration:
      gitProvider: ric03uec_github
      path: ric03uec/app
      branches:
        include: master

  - name: myDockerImg
    type: Image
    configuration:
      registry: artDocker
      imageName: demo/app
      imageTag: latest
      autoPull: false

pipelines:

  - name: test_pipeline
    steps:
      - name: build
        type: Bash
        configuration:
          affinityGroup: build
          integrations:
            - name: notifySlack
          inputResources:
            - name: ric03uec_app
          outputResources:
            - name: myDockerImg
        execution:
          onExecute:
            - printenv
            - pushd $res_ric03uec_app_resourcePath
            - docker build -t ric03uec_app:$step_id .
            - write_output myDockerImg "imageTag="$step_id
            - add_run_variable imageName=$res_myDockerImg_imageName
            - add_run_variable imageTag=$step_id
            - add_pipeline_variable intName=$res_myDockerImg_integrationName
            - add_pipeline_variable pullSetting=$res_myDockerImg_autoPull
          onSuccess:
            - send_notification notifySlack --text "this is a custom message"


      - name: test
        type: Bash
        configuration:
          affinityGroup: build
          inputResources:
            - name: myDockerImg
        execution:
          onExecute:
            - printenv
            - docker run --name "test_app" ric03uec_app:$res_myDockerImg_imageTag bash -c "pwd"
            - docker rm -fv "test_app"
            - echo $res_myDockerImg_imageTag
            - echo $imageName
            - echo $imageTag
            - echo $pullSetting
            - echo $intName

      - name: parallel_1
        type: Bash
        configuration:
          affinityGroup: build
          inputSteps:
            - name: test
        execution:
          onExecute:
            - printenv
            - echo $imageTag


      - name: parallel_2
        type: Bash
        configuration:
          affinityGroup: build
          inputSteps:
            - name: test
        execution:
          onExecute:
            - printenv

      - name: parallel_3
        type: Bash
        configuration:
          affinityGroup: build
          inputSteps:
            - name: test
        execution:
          onExecute:
            - printenv

      - name: push
        type: Bash
        configuration:
          affinityGroup: build
          inputSteps:
            - name: parallel_2
            - name: parallel_1
            - name: parallel_3
          integrations:
            - name: artDocker
            - name: notifySlack
        execution:
          onExecute:
            - docker login -u $int_artDocker_username -p $int_artDocker_password $int_artDocker_url
            - artDockerIp=$(echo $int_artDocker_url | awk -F[/:] '{print $4}')
            - artDockerPort=$(echo $int_artDocker_url | awk -F[/:] '{print $5}')
            - echo "$artDockerIp:$artDockerPort"
            - docker tag ric03uec_app:$imageTag $artDockerIp:$artDockerPort/$imageName:$imageTag
            - docker push $artDockerIp:$artDockerPort/$imageName:$imageTag
            - echo $pullSetting
            - echo $intName
            - echo "Changing the world"
          onSuccess:
            - send_notification notifySlack --text "push is done"

  - name: second_test_pipeline
    steps:
      - name: first_step
        type: Bash
        configuration:
          inputResources:
            - name: ric03uec_app
        execution:
          onExecute:
            - printenv
